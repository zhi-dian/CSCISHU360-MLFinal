['sample_submission.csv', 'train.csv', 'train_image', 'train_images_525']
1
True
          Image_Label  ...        im_id
0    0011165.jpg_Fish  ...  0011165.jpg
1  0011165.jpg_Flower  ...  0011165.jpg
2  0011165.jpg_Gravel  ...  0011165.jpg
3   0011165.jpg_Sugar  ...  0011165.jpg
4    002be4f.jpg_Fish  ...  002be4f.jpg

[5 rows x 4 columns]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 5546 entries, 0 to 5545
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   img_id  5546 non-null   object
 1   count   5546 non-null   int64 
dtypes: int64(1), object(1)
memory usage: 86.8+ KB
None
        img_id  count
0  0011165.jpg      2
1  002be4f.jpg      3
2  0031ae9.jpg      3
3  0035239.jpg      2
4  003994e.jpg      3
training set   ['32d43c0.jpg' '32e9f95.jpg' '332711f.jpg' '332cb5c.jpg' '3361513.jpg'].. with length 3993
validation set ['32f591b.jpg' '33bf913.jpg' '33cdcc4.jpg' '3465da2.jpg' '34d2e05.jpg'].. with length 444
testing set    ['0011165.jpg' '002be4f.jpg' '0031ae9.jpg' '0035239.jpg' '003994e.jpg'].. with length 1109
Training 1 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
/scratch/jx2314/ML/Unet.py:685: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1 - beta1, grad)
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 1.091202567521116, valid loss: 1.244083742837648, dice score: 0.3713977844328494
Validation loss decreased (inf --> 1.244084).  Saving model ...
Training 2 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.9485283349350285, valid loss: 0.9869686896736557, dice score: 0.3863593968185219
Validation loss decreased (1.244084 --> 0.986969).  Saving model ...
Training 3 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.918488722336552, valid loss: 1.0133143437875283, dice score: 0.4166569613121651
Training 4 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.9101279807395276, valid loss: 0.8947637999379957, dice score: 0.4509749621958346
Validation loss decreased (0.986969 --> 0.894764).  Saving model ...
Training 5 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8950114689045253, valid loss: 0.9103554068384944, dice score: 0.4588987923957206
Training 6 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8818397253729364, valid loss: 1.0586632329064447, dice score: 0.377810831810977
Training 7 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8668194834582346, valid loss: 0.9339536412342174, dice score: 0.44289768064344254
Training 8 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8354091248415539, valid loss: 0.8404138587616585, dice score: 0.48469559244207433
Validation loss decreased (0.894764 --> 0.840414).  Saving model ...
Training 9 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8266207314719839, valid loss: 0.9147514491467863, dice score: 0.46539575586447846
Training 10 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.825658347443653, valid loss: 0.8664387142336046, dice score: 0.46069465617875793
Training 11 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8194997689492894, valid loss: 0.8162632375150114, dice score: 0.4947470635981173
Validation loss decreased (0.840414 --> 0.816263).  Saving model ...
Training 12 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.815633000107657, valid loss: 0.8405069757152248, dice score: 0.47600959442757274
Training 13 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8138882355256514, valid loss: 0.8880981851268459, dice score: 0.47190365517461624
Training 14 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8133314015003723, valid loss: 0.8339193543872317, dice score: 0.49427890133213354
Training 15 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8049281934971741, valid loss: 0.8158796929024361, dice score: 0.5052172090556171
Validation loss decreased (0.816263 --> 0.815880).  Saving model ...
Training 16 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7971988375432325, valid loss: 0.8031130416973217, dice score: 0.5126080029719585
Validation loss decreased (0.815880 --> 0.803113).  Saving model ...
Training 17 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8002620964996086, valid loss: 0.7967871169786196, dice score: 0.5128367704314154
Validation loss decreased (0.803113 --> 0.796787).  Saving model ...
Training 18 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7933040042733179, valid loss: 0.7981746647809003, dice score: 0.5138031437590316
Training 19 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.792619006871998, valid loss: 0.7923150288092123, dice score: 0.5156185079265285
Validation loss decreased (0.796787 --> 0.792315).  Saving model ...
Training 20 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7936991099394147, valid loss: 0.7994189616796132, dice score: 0.5167648679501301
Training 21 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7951210635125772, valid loss: 0.7941426779772784, dice score: 0.5150784930667361
Training 22 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7872554606105223, valid loss: 0.7942354066951854, dice score: 0.5164644412092261
Training 23 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7853437180271908, valid loss: 0.7894746290670859, dice score: 0.51853226487701
Validation loss decreased (0.792315 --> 0.789475).  Saving model ...
Training 24 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7865617093423719, valid loss: 0.7899724921664676, dice score: 0.5172827340461112
Training 25 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7832316966723177, valid loss: 0.7895296908713676, dice score: 0.5193192958831787
Training 26 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.784696907230466, valid loss: 0.7942907117508553, dice score: 0.5187469124794006
Training 27 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7800736790935766, valid loss: 0.7890345679747092, dice score: 0.5217462182044983
Validation loss decreased (0.789475 --> 0.789035).  Saving model ...
Training 28 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7875695878809149, valid loss: 0.7887677212019224, dice score: 0.5170413996722247
Validation loss decreased (0.789035 --> 0.788768).  Saving model ...
Training 29 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.784288834128319, valid loss: 0.7908163537850251, dice score: 0.5206532703863608
Training 30 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.786292200873079, valid loss: 0.789384485902013, dice score: 0.521652481040439
Training 31 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7865537220512808, valid loss: 0.7925137829136204, dice score: 0.5208905741975114
Training 32 Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7848277081680155, valid loss: 0.7872035857793447, dice score: 0.5185183109463872
Validation loss decreased (0.788768 --> 0.787204).  Saving model ...
Found model file at: /scratch/jx2314/ML/model_cifar.pt
  0%|          | 0/19 [00:00<?, ?it/s]
0
     threshold   size      dice
71        0.55  30000  0.585279
65        0.50  30000  0.580629
47        0.35  30000  0.578990
77        0.60  30000  0.577721
100       0.80  10000  0.577176
1
    threshold   size      dice
65       0.50  30000  0.747944
77       0.60  30000  0.746536
71       0.55  30000  0.743586
83       0.65  30000  0.742336
59       0.45  30000  0.742000
2
    threshold   size      dice
47       0.35  30000  0.642222
41       0.30  30000  0.631194
53       0.40  30000  0.630185
35       0.25  30000  0.627423
59       0.45  30000  0.621662
3
    threshold   size      dice
82       0.65  10000  0.598317
76       0.60  10000  0.598135
88       0.70  10000  0.597343
70       0.55  10000  0.587162
93       0.75   5000  0.584120
{0: (0.55, 30000), 1: (0.5, 30000), 2: (0.35, 30000), 3: (0.65, 10000)}
visualize starting...
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
torch.Size([24, 3, 320, 640])
torch.Size([24, 4, 320, 640])
(4, 320, 640)
testing start...
  0%|          | 0/185 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/scratch/jx2314/ML/Unet.py", line 962, in <module>
    outp = model(data)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/scratch/jx2314/ML/Unet.py", line 547, in forward
    x = self.up4(x, x1)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/scratch/jx2314/ML/Unet.py", line 511, in forward
    return self.conv(x)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/scratch/jx2314/ML/Unet.py", line 466, in forward
    x = self.conv(x)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/functional.py", line 2450, in batch_norm
    return torch.batch_norm(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.17 GiB (GPU 0; 44.49 GiB total capacity; 41.64 GiB already allocated; 223.12 MiB free; 43.26 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
