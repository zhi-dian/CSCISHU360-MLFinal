/ext3/miniconda3/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/ext3/miniconda3/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
['sample_submission.csv', 'train.csv', 'train_image', 'train_images_525']
1
True
          Image_Label  ...        im_id
0    0011165.jpg_Fish  ...  0011165.jpg
1  0011165.jpg_Flower  ...  0011165.jpg
2  0011165.jpg_Gravel  ...  0011165.jpg
3   0011165.jpg_Sugar  ...  0011165.jpg
4    002be4f.jpg_Fish  ...  002be4f.jpg

[5 rows x 4 columns]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 5546 entries, 0 to 5545
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   img_id  5546 non-null   object
 1   count   5546 non-null   int64 
dtypes: int64(1), object(1)
memory usage: 86.8+ KB
None
        img_id  count
0  0011165.jpg      2
1  002be4f.jpg      3
2  0031ae9.jpg      3
3  0035239.jpg      2
4  003994e.jpg      3
training set   ['32d43c0.jpg' '32e9f95.jpg' '332711f.jpg' '332cb5c.jpg' '3361513.jpg'].. with length 3993
validation set ['32f591b.jpg' '33bf913.jpg' '33cdcc4.jpg' '3465da2.jpg' '34d2e05.jpg'].. with length 444
testing set    ['0011165.jpg' '002be4f.jpg' '0031ae9.jpg' '0035239.jpg' '003994e.jpg'].. with length 1109
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
/scratch/jx2314/ML/PSPnet.py:685: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1 - beta1, grad)
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.9784131662277777, valid loss: 0.9395018268275905, dice score: 0.4624541321316281
Validation loss decreased (inf --> 0.939502).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8733641837970553, valid loss: 0.9990521701606544, dice score: 0.38265762699616923
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8570083608132928, valid loss: 1.1001619390539221, dice score: 0.4148394384899655
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8404447026578759, valid loss: 0.8411530256271362, dice score: 0.4767312359165501
Validation loss decreased (0.939502 --> 0.841153).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8241690130810555, valid loss: 0.851729840845675, dice score: 0.4830224401242024
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8211391025875673, valid loss: 1.1062793812236271, dice score: 0.3689116392586682
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.8207776979966597, valid loss: 1.0458675961236696, dice score: 0.431053601406716
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7891857070550267, valid loss: 0.7987733692736239, dice score: 0.5117165333515888
Validation loss decreased (0.841153 --> 0.798773).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7749368130578572, valid loss: 0.8154573778848391, dice score: 0.5153274149508089
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7738104287526556, valid loss: 0.8439266971639685, dice score: 0.5024409326347145
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7757329126661833, valid loss: 0.8004751849818874, dice score: 0.50995822049476
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7729340255215685, valid loss: 0.8062307560766065, dice score: 0.5107519191664618
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7580770703297106, valid loss: 0.7724250909444448, dice score: 0.5328564998265859
Validation loss decreased (0.798773 --> 0.772425).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7547844926904325, valid loss: 0.7864912796664882, dice score: 0.5269640071971996
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.754588432817151, valid loss: 0.7922698839290722, dice score: 0.5252410576150224
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7554647518135748, valid loss: 0.7971398169929916, dice score: 0.5163188028979946
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7512995084365627, valid loss: 0.7906966016099259, dice score: 0.5325096217361657
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7474638598024352, valid loss: 0.7606741753784386, dice score: 0.5381606205089672
Validation loss decreased (0.772425 --> 0.760674).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7426164529092504, valid loss: 0.7627948925301835, dice score: 0.5394329541438335
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7398290944045688, valid loss: 0.761522650718689, dice score: 0.5353482236733308
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7447260347727453, valid loss: 0.7642754155236322, dice score: 0.5377866464692194
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7427111260430603, valid loss: 0.7582401601043908, dice score: 0.5381138695252908
Validation loss decreased (0.760674 --> 0.758240).  Saving model ...
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7397989630251339, valid loss: 0.7601644815625371, dice score: 0.5374333600740175
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.742870201704468, valid loss: 0.759408446582588, dice score: 0.5370353814717885
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7382880490494348, valid loss: 0.7625812131005365, dice score: 0.5382820335594384
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7377216121381964, valid loss: 0.7586201042742342, dice score: 0.5387064444052206
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7372328360935156, valid loss: 0.7600094643799035, dice score: 0.5414061932950407
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7364550340363712, valid loss: 0.7636070557542749, dice score: 0.5377927052008139
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7354106720366217, valid loss: 0.7595238991685815, dice score: 0.5413815073064856
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7388116821680277, valid loss: 0.7601504728600785, dice score: 0.540020992627015
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7336866327195486, valid loss: 0.7618222913226566, dice score: 0.5417251039195705
Training Start
  0%|          | 0/167 [00:00<?, ?it/s, train_loss=0]
  0%|          | 0/19 [00:00<?, ?it/s, dice_score=0, valid_loss=0]
train loss: 0.7393593367197565, valid loss: 0.7582840033479639, dice score: 0.5398783683776855
Found model file at: /scratch/jx2314/ML/model_cifar1.pt
  0%|          | 0/19 [00:00<?, ?it/s]
0
    threshold   size      dice
41       0.30  30000  0.594167
47       0.35  30000  0.588663
53       0.40  30000  0.585125
52       0.40  10000  0.581361
35       0.25  30000  0.580455
1
    threshold   size      dice
76       0.60  10000  0.761671
82       0.65  10000  0.759741
65       0.50  30000  0.756069
70       0.55  10000  0.755981
87       0.70   5000  0.755947
2
    threshold   size      dice
41       0.30  30000  0.603217
53       0.40  30000  0.602523
64       0.50  10000  0.602213
47       0.35  30000  0.601095
35       0.25  30000  0.600975
3
    threshold   size      dice
75       0.60   5000  0.598942
64       0.50  10000  0.598120
69       0.55   5000  0.595784
70       0.55  10000  0.594334
81       0.65   5000  0.592120
{0: (0.3, 30000), 1: (0.6, 10000), 2: (0.3, 30000), 3: (0.6, 5000)}
visualize starting...
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
testing start...
  0%|          | 0/185 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/scratch/jx2314/ML/PSPnet.py", line 961, in <module>
    outp = model(data)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/scratch/jx2314/ML/PSPnet.py", line 531, in forward
    x_tmp = self.layer3(x)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torchvision/models/resnet.py", line 154, in forward
    out = self.conv3(out)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 300.00 MiB (GPU 0; 31.75 GiB total capacity; 29.78 GiB already allocated; 244.94 MiB free; 30.36 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
